plugins {
  id 'java-library'
  id 'maven-publish'
}

ext {
  groupName = 'com.github.openseedbox'

  java_build_level = 11
  java_run_level = 11

  replay_version = 'PR-291-SNAPSHOT'
  replay_group = 'com.codeborne.replay'
  replay_group = 'com.github.xabolcs.re-play1'
}

publishing {
  publications {
    maven(MavenPublication) {
      from components.java
    }
  }
}

java {
  withSourcesJar()
  toolchain {
    languageVersion = JavaLanguageVersion.of(java_build_level)
  }
}

if (java_build_level > 8) {
  tasks.withType(JavaCompile).configureEach {
    options.release = java_run_level
  }
}

tasks.withType(Test).configureEach {
    testLogging {
      events "passed", "skipped", "failed", "standardOut", "standardError"
    }
    javaLauncher = javaToolchains.launcherFor {
    languageVersion = JavaLanguageVersion.of(java_run_level)
  }
}

tasks.register('precompileTemplates', JavaExec) {
  javaLauncher = javaToolchains.launcherFor {
    languageVersion = JavaLanguageVersion.of(java_run_level)
  }.get()
  jvmArgs '-Xmx128m'
  mainClass = 'play.modules.gtengineplugin.PrecompileTemplates'
  mainClass = 'play.templates.PrecompileTemplates'
  classpath = files('precompiled/java') + sourceSets.main.runtimeClasspath + sourceSets.main.compileClasspath + fileTree(dir: file('lib/').path, include: '*.jar')
  subprojects.each { p ->
    classpath += p.sourceSets.main.runtimeClasspath
  }

  systemProperty 'file.encoding', 'UTF-8'

  doLast {
    copy {
      from 'precompiled/java'
      into sourceSets.main.output.classesDirs.asPath
    }
    delete 'precompiled'
  }
}

tasks.withType(Jar).configureEach {
  dependsOn precompileTemplates
}

//test.onlyIf { project.hasProperty('ApplicationTestIsAlreadyDefined') }

sourceSets {
  main {
    java {
      srcDir "app"
      exclude 'views/'
    }
  }
  test {
    java {srcDir "test"}
  }
}

processResources {
  from('conf') {into 'conf' /*exclude 'application.conf*'*/}
  from('app') {include 'play.plugins'}
  from('app/views') {into 'app/views'}
  from('public') {into 'public'}
}

repositories {
  mavenCentral()
  mavenLocal()
  maven { url 'https://jitpack.io' }
}

dependencies {
  implementation("${replay_group}:framework:${replay_version}")
  implementation("${replay_group}:fastergt:${replay_version}")

  implementation 'org.apache.commons:commons-lang3:3.12.0', {
    because 'was unexposed in commit https://github.com/codeborne/replay/commit/b6ca6b95d246'
  }
  implementation('com.ning:async-http-client:1.9.40') {
    exclude group: 'io.netty'
  }

  testImplementation('org.assertj:assertj-core:3.24.2')
  testImplementation('junit:junit:4.13.2')
}
